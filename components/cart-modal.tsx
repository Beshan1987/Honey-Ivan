"use client"

import { useState } from "react"
import { X, Plus, Minus, Send, MapPin, MessageSquare, Truck, Mail, Phone } from "lucide-react"
import Image from "next/image"
import { useCart } from "@/contexts/cart-context"
import styles from "./cart-modal.module.css"

interface CartModalProps {
  isOpen: boolean
  onClose: () => void
}

export function CartModal({ isOpen, onClose }: CartModalProps) {
  const { items, total, updateQuantity, removeItem, clearCart } = useCart()
  const [isLoading, setIsLoading] = useState(false)
  const [orderSent, setOrderSent] = useState(false)
  const [deliveryAddress, setDeliveryAddress] = useState("")
  const [additionalInfo, setAdditionalInfo] = useState("")
  const [customerName, setCustomerName] = useState("")
  const [customerPhone, setCustomerPhone] = useState("")
  const [addressError, setAddressError] = useState("")
  const [nameError, setNameError] = useState("")
  const [phoneError, setPhoneError] = useState("")
  const [orderMethod, setOrderMethod] = useState<"telegram" | "direct">("telegram")

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –æ–±—ä–µ–º –≤ –ª–∏—Ç—Ä–∞—Ö
  const totalLiters = items.reduce((sum, item) => sum + item.quantity, 0)
  const isFreeDelivery = totalLiters >= 2

  const validateForm = (method: "telegram" | "direct") => {
    let isValid = true

    if (!deliveryAddress.trim()) {
      setAddressError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
      isValid = false
    } else {
      setAddressError("")
    }

    if (method === "direct") {
      if (!customerName.trim()) {
        setNameError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è")
        isValid = false
      } else {
        setNameError("")
      }

      if (!customerPhone.trim()) {
        setPhoneError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        isValid = false
      } else {
        setPhoneError("")
      }
    }

    return isValid
  }

  const sendToTelegram = async () => {
    if (items.length === 0) return

    if (!validateForm("telegram")) return

    setIsLoading(true)

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏
    const deliveryCost = isFreeDelivery ? 0 : 10
    const finalTotal = total + deliveryCost

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const orderText =
      `üçØ –ù–û–í–´–ô –ó–ê–ö–ê–ó –ú–Å–î–ê\n\n` +
      `üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: –ò–≤–∞–Ω\n\n` +
      `üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:\n` +
      items
        .map(
          (item) =>
            `‚Ä¢ ${item.name}\n  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${item.quantity} —à—Ç.\n  –¶–µ–Ω–∞: ${item.price} BYN\n  –°—É–º–º–∞: ${item.price * item.quantity} BYN\n`,
        )
        .join("\n") +
      `\nüìä –ò–¢–û–ì–û:\n` +
      `üí∞ –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤: ${total.toFixed(0)} BYN\n` +
      `üì¶ –û–±—â–∏–π –æ–±—ä–µ–º: ${totalLiters} –ª–∏—Ç—Ä${totalLiters === 1 ? "" : totalLiters < 5 ? "–∞" : "–æ–≤"}\n` +
      `üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${isFreeDelivery ? "–ë–ï–°–ü–õ–ê–¢–ù–û (0 BYN)" : "10 BYN"}\n` +
      `üí≥ –ò–¢–û–ì–û –ö –û–ü–õ–ê–¢–ï: ${finalTotal.toFixed(0)} BYN\n\n` +
      `üìç –ê–î–†–ï–° –î–û–°–¢–ê–í–ö–ò:\n${deliveryAddress}\n\n` +
      (additionalInfo.trim() ? `üìù –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:\n${additionalInfo}\n\n` : "") +
      `üìÖ –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString("ru-RU")}`

    // –ö–æ–¥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è URL
    const encodedMessage = encodeURIComponent(orderText)

    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è Telegram
    const telegramUrl = `https://t.me/iv_11111?text=${encodedMessage}`

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram
    window.open(telegramUrl, "_blank")

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏ –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    setOrderSent(true)
    clearCart()
    setDeliveryAddress("")
    setAdditionalInfo("")
    setIsLoading(false)

    setTimeout(() => {
      setOrderSent(false)
      onClose()
    }, 3000)
  }

  const sendDirectOrder = async () => {
    if (items.length === 0) return

    if (!validateForm("direct")) return

    setIsLoading(true)

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏
    const deliveryCost = isFreeDelivery ? 0 : 10
    const finalTotal = total + deliveryCost

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è email
    const orderText =
      `üçØ –ù–û–í–´–ô –ó–ê–ö–ê–ó –ú–Å–î–ê (–ë–ï–ó TELEGRAM)\n\n` +
      `üë§ –î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê:\n` +
      `–ò–º—è: ${customerName}\n` +
      `–¢–µ–ª–µ—Ñ–æ–Ω: ${customerPhone}\n\n` +
      `üìã –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:\n` +
      items
        .map(
          (item) =>
            `‚Ä¢ ${item.name}\n  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${item.quantity} —à—Ç.\n  –¶–µ–Ω–∞: ${item.price} BYN\n  –°—É–º–º–∞: ${item.price * item.quantity} BYN\n`,
        )
        .join("\n") +
      `\nüìä –ò–¢–û–ì–û:\n` +
      `üí∞ –°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤: ${total.toFixed(0)} BYN\n` +
      `üì¶ –û–±—â–∏–π –æ–±—ä–µ–º: ${totalLiters} –ª–∏—Ç—Ä${totalLiters === 1 ? "" : totalLiters < 5 ? "–∞" : "–æ–≤"}\n` +
      `üöö –î–æ—Å—Ç–∞–≤–∫–∞: ${isFreeDelivery ? "–ë–ï–°–ü–õ–ê–¢–ù–û (0 BYN)" : "10 BYN"}\n` +
      `üí≥ –ò–¢–û–ì–û –ö –û–ü–õ–ê–¢–ï: ${finalTotal.toFixed(0)} BYN\n\n` +
      `üìç –ê–î–†–ï–° –î–û–°–¢–ê–í–ö–ò:\n${deliveryAddress}\n\n` +
      (additionalInfo.trim() ? `üìù –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:\n${additionalInfo}\n\n` : "") +
      `üìÖ –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: ${new Date().toLocaleString("ru-RU")}\n\n` +
      `‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö–ª–∏–µ–Ω—Ç –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Telegram. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: ${customerPhone}`

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ email
    const subject = `üçØ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –º—ë–¥–∞ –æ—Ç ${customerName}`
    const encodedSubject = encodeURIComponent(subject)
    const encodedBody = encodeURIComponent(orderText)
    const mailtoUrl = `mailto:nickel07@mail.ru?subject=${encodedSubject}&body=${encodedBody}`

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—á—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
    window.open(mailtoUrl, "_self")

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏ –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    setOrderSent(true)
    clearCart()
    setDeliveryAddress("")
    setAdditionalInfo("")
    setCustomerName("")
    setCustomerPhone("")
    setIsLoading(false)

    setTimeout(() => {
      setOrderSent(false)
      onClose()
    }, 3000)
  }

  const handleClose = () => {
    setAddressError("")
    setNameError("")
    setPhoneError("")
    onClose()
  }

  if (!isOpen) return null

  return (
    <div className={styles.overlay} onClick={handleClose}>
      <div className={styles.modal} onClick={(e) => e.stopPropagation()}>
        <div className={styles.header}>
          <h2 className={styles.title}>–ö–æ—Ä–∑–∏–Ω–∞</h2>
          <button className={styles.closeButton} onClick={handleClose}>
            <X size={24} />
          </button>
        </div>

        <div className={styles.content}>
          {orderSent ? (
            <div className={styles.successMessage}>
              <div className={styles.successIcon}>‚úÖ</div>
              <h3>{orderMethod === "telegram" ? "–ü–µ—Ä–µ—Ö–æ–¥ –≤ Telegram!" : "–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!"}</h3>
              <p>
                {orderMethod === "telegram"
                  ? "Telegram –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è —Å –≥–æ—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."
                  : "–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ò–≤–∞–Ω—É –ø–æ email. –û–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—É."}
              </p>
            </div>
          ) : items.length === 0 ? (
            <div className={styles.emptyCart}>
              <div className={styles.emptyIcon}>üõí</div>
              <h3>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h3>
              <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</p>
            </div>
          ) : (
            <>
              <div className={styles.itemsList}>
                {items.map((item) => (

                  <div key={item.id} className={styles.cartItem}>

                    <div className={styles.itemImage}>
                      <Image src={item.image || "/placeholder.svg"} alt={item.name} width={60} height={60} />
                    </div>


                    <div className={styles.itemDetails}>
                      <h4 className={styles.itemName}>{item.name}</h4>
                      <p className={styles.itemPrice}>{item.price} BYN</p>
                      <button className={styles.removeButton} onClick={() => removeItem(item.id)}>
                        <span>—É–¥–∞–ª–∏—Ç—å</span><X size={16} />
                      </button>
                    </div>

                    <div className={styles.quantityControls}>
                      <button
                        className={styles.quantityButton}
                        onClick={() => updateQuantity(item.id, item.quantity - 1)}
                      >
                        <Minus size={16} />
                      </button>
                      <span className={styles.quantity}>{item.quantity}</span>
                      <button
                        className={styles.quantityButton}
                        onClick={() => updateQuantity(item.id, item.quantity + 1)}
                      >
                        <Plus size={16} />
                      </button>
                    </div>

                    <div className={styles.itemTotal}>{(item.price * item.quantity).toFixed(0)} BYN</div>
                  </div>
                ))}
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ */}
              <div className={styles.deliveryInfo}>
                <div className={styles.deliveryHeader}>
                  <Truck className={styles.deliveryIcon} />
                  <h3 className={styles.deliveryTitle}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ</h3>
                </div>
                <div className={styles.deliveryDetails}>
                  <div className={styles.deliveryItem}>
                    <span className={styles.deliveryLabel}>–û–±—â–∏–π –æ–±—ä–µ–º:</span>
                    <span className={styles.deliveryValue}>
                      {totalLiters} –ª–∏—Ç—Ä{totalLiters === 1 ? "" : totalLiters < 5 ? "–∞" : "–æ–≤"}
                    </span>
                  </div>
                  <div className={styles.deliveryItem}>
                    <span className={styles.deliveryLabel}>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:</span>
                    <span
                      className={`${styles.deliveryValue} ${isFreeDelivery ? styles.freeDelivery : styles.paidDelivery}`}
                    >
                      {isFreeDelivery ? "–ë–ï–°–ü–õ–ê–¢–ù–û" : "10 BYN"}
                    </span>
                  </div>
                  {!isFreeDelivery && (
                    <div className={styles.deliveryNote}>üí° –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 2 –ª–∏—Ç—Ä–æ–≤ –º—ë–¥–∞</div>
                  )}
                </div>
              </div>

              {/* –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –∑–∞–∫–∞–∑–∞ */}
              <div className={styles.orderMethodSection}>
                <h3 className={styles.orderMethodTitle}>–°–ø–æ—Å–æ–± –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</h3>
                <div className={styles.orderMethodButtons}>
                  <button
                    className={`${styles.methodButton} ${orderMethod === "telegram" ? styles.methodButtonActive : ""}`}
                    onClick={() => setOrderMethod("telegram")}
                  >
                    <Send className={styles.methodIcon} />
                    <div>
                      <div className={styles.methodTitle}>–ß–µ—Ä–µ–∑ Telegram</div>
                      <div className={styles.methodDescription}>–ë—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ</div>
                    </div>
                  </button>
                  <button
                    className={`${styles.methodButton} ${orderMethod === "direct" ? styles.methodButtonActive : ""}`}
                    onClick={() => setOrderMethod("direct")}
                  >
                    <Phone className={styles.methodIcon} />
                    <div>
                      <div className={styles.methodTitle}>–ë–µ–∑ Telegram</div>
                      <div className={styles.methodDescription}>–ò–≤–∞–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏</div>
                    </div>
                  </button>
                </div>
              </div>

              {/* –§–æ—Ä–º–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ –±–µ–∑ Telegram */}
              {orderMethod === "direct" && (
                <div className={styles.customerForm}>
                  <h4 className={styles.customerFormTitle}>–í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h4>
                  <div className={styles.formRow}>
                    <div className={styles.formGroup}>
                      <label className={styles.formLabel}>
                        <MapPin className={styles.labelIcon} />
                        –í–∞—à–µ –∏–º—è *
                      </label>
                      <input
                        type="text"
                        className={`${styles.formInput} ${nameError ? styles.formError : ""}`}
                        value={customerName}
                        onChange={(e) => {
                          setCustomerName(e.target.value)
                          if (nameError) setNameError("")
                        }}
                        placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
                      />
                      {nameError && <span className={styles.errorMessage}>{nameError}</span>}
                    </div>

                    <div className={styles.formGroup}>
                      <label className={styles.formLabel}>
                        <Phone className={styles.labelIcon} />
                        –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ *
                      </label>
                      <input
                        type="tel"
                        className={`${styles.formInput} ${phoneError ? styles.formError : ""}`}
                        value={customerPhone}
                        onChange={(e) => {
                          setCustomerPhone(e.target.value)
                          if (phoneError) setPhoneError("")
                        }}
                        placeholder="+375 XX XXX-XX-XX"
                      />
                      {phoneError && <span className={styles.errorMessage}>{phoneError}</span>}
                    </div>
                  </div>
                </div>
              )}

              {/* –§–æ—Ä–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
              <div className={styles.deliveryForm}>
                <div className={styles.formGroup}>
                  <label className={styles.formLabel}>
                    <MapPin className={styles.labelIcon} />
                    –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ *
                  </label>
                  <textarea
                    className={`${styles.formTextarea} ${addressError ? styles.formError : ""}`}
                    value={deliveryAddress}
                    onChange={(e) => {
                      setDeliveryAddress(e.target.value)
                      if (addressError) setAddressError("")
                    }}
                    placeholder="–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: –≥–æ—Ä–æ–¥, —É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞..."
                    rows={3}
                  />
                  {addressError && <span className={styles.errorMessage}>{addressError}</span>}
                </div>

                <div className={styles.formGroup}>
                  <label className={styles.formLabel}>
                    <MessageSquare className={styles.labelIcon} />
                    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                  </label>
                  <textarea
                    className={styles.formTextarea}
                    value={additionalInfo}
                    onChange={(e) => setAdditionalInfo(e.target.value)}
                    placeholder="–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏, –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∑–∞–∫–∞–∑—É..."
                    rows={3}
                  />
                </div>
              </div>

              <div className={styles.footer}>
                <div className={styles.total}>
                  <div className={styles.totalRow}>
                    <span className={styles.totalLabel}>–¢–æ–≤–∞—Ä—ã:</span>
                    <span className={styles.totalAmount}>{total.toFixed(0)} BYN</span>
                  </div>
                  <div className={styles.totalRow}>
                    <span className={styles.totalLabel}>–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                    <span className={`${styles.totalAmount} ${isFreeDelivery ? styles.freeDelivery : ""}`}>
                      {isFreeDelivery ? "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ" : "10 BYN"}
                    </span>
                  </div>
                  <div className={styles.totalRowFinal}>
                    <span className={styles.totalLabelFinal}>–ò—Ç–æ–≥–æ:</span>
                    <span className={styles.totalAmountFinal}>
                      {(total + (isFreeDelivery ? 0 : 10)).toFixed(0)} BYN
                    </span>
                  </div>
                </div>

                <div className={styles.actions}>
                  <button className={styles.clearButton} onClick={clearCart}>
                    –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
                  </button>

                  {orderMethod === "telegram" ? (
                    <button
                      className={styles.orderButton}
                      onClick={sendToTelegram}
                      disabled={isLoading || !deliveryAddress.trim()}
                    >
                      <Send size={16} />
                      {isLoading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram"}
                    </button>
                  ) : (
                    <button
                      className={styles.orderButton}
                      onClick={sendDirectOrder}
                      disabled={isLoading || !deliveryAddress.trim() || !customerName.trim() || !customerPhone.trim()}
                    >
                      <Mail size={16} />
                      {isLoading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"}
                    </button>
                  )}
                </div>
              </div>
            </>
          )}
        </div>
      </div>
    </div>
  )
}
